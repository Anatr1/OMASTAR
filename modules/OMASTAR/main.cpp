#include "project_cmakevariables.h" //Project cmake variables automatically generated by the CMake root project.
//cmake variables automatically generated by this CMake module project.
//Notice: the first part of the name is the same as declared in PROJECT_NAME in the CMake project.
#include "OMASTAR_cmakevariables.h"
#include <iostream>
#include <toml.hpp>
#include <MqttManager.hpp>
#include <Property.hpp>
#include <Moquette2/MoquetteClient.hpp>
#include "./include/utils/pgm.h"
#include "./include/utils/utils.h"
#include "./include/A_star/A_star.h"

using namespace std;

int main(void) {
    //prints some project variables, defined in <buildfolder>/project_cmakevariables.h and <buildfolder>/<moduleName>_cmakevariables.h
    cout << DIANA_OMASTAR_PROJECT_NAME << " from project "<<DIANA_PROJECT_NAME<<" version " << DIANA_PROJECT_VERSION << endl
            << "Example file path is "<< DIANA_OMASTAR_FILE_EXAMPLEFILE_TXT << endl
            << "Config file path is " << DIANA_OMASTAR_CFG_FILE_CONFIG_TOML << endl
            << "Installation folder is " << DIANA_OMASTAR_MODULE_ROOTPATH << endl<< endl;

    //vector<vector<int>> map = readPGMmap(DIANA_OMASTAR_FILE_BINMAP_30X20);
    vector<vector<int>> map = generateNoiseMap(300, 400, 255);
    exportToPGM(map, "map.pgm");
    /*
    cout << "Map size: " << map[0].size() << "x" << map.size() << endl;

    xy start = generateRandomPoint(map.size(), map[0].size());
    xy goal = generateRandomPoint(map.size(), map[0].size());

    cout << "Start: " << start.x << " " << start.y << endl;
    cout << "Goal: " << goal.x << " " << goal.y << endl;

    vector<xy> path = a_star(map, start, goal);

    cout << "   Path: " << endl;
    for (auto p : path) {
        cout << "   " << p.x << " " << p.y << endl;
    }

    map = colorPath(map, path);

    exportToPGM(map, "map.pgm");
    */
    return 0;
}
